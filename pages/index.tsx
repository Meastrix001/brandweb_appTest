import type { GetStaticProps, NextPage, } from 'next'
import Head from 'next/head'
import { useEffect, useState } from 'react'
import { json } from 'stream/consumers'
import GameCard from './components/GameCard'
import MainContainer from './components/MainContainer'
import { Game, GameData } from '../types'
import HashLoader from "react-spinners/HashLoader";

const Home: NextPage = ({searchDataRes}: any) => {
  // const [searchResult, setSearchResult] = useState()
  const [searchResult, setSearchResult] = useState<any[]>([])
  const [pageNumber, setPageNumber] = useState<number>(1)
  const [rawgData, setRawgData] = useState<GameData>()
  const [seeMoreState, setSeeMoreState] = useState(false)
  const [largeResultsToggle, setLargeResultsToggle] = useState<boolean>(false)
  console.log(rawgData)
  useEffect(() => {
    setSearchResult(searchDataRes)
  }, [searchDataRes])
 
  useEffect(() => {
    setRawgData(undefined)
    const fetchData = async () => {
      const results = await fetch(`https://api.rawg.io/api/games?key=${process.env.NEXT_PUBLIC_RAWG_API_KEY}&metacritic=100&page=${pageNumber}`)
      const searchData = await results.json()
      setRawgData(searchData)
    }
    fetchData()
  }, [pageNumber])
 
  return (
    <div>
      <Head>
        <title>brandWeb Test</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        {/* @ts-ignore: */}
        <script src="https://cdn.jsdelivr.net/npm/masonry-layout@4.2.2/dist/masonry.pkgd.min.js" integrity="sha384-GNFwBvfVxBkLMJpYMOABq3c+d3KnQxudP/mGPkzpZSTYykLBNsZEnG2D9G/X/+7D" crossorigin="anonymous" async></script>
        <link rel="icon" href="/favicon.ico" />
      </Head>
      
        <MainContainer> 
            <div className='container p-4'>
              {/* searchResult large */}
              {searchResult ? 
                <div className={`${searchResult.length === 0 ? "d-none" : ""}`}>
                <h2 className=' d-flex flex-column text-white mb-5 pt-md-5'>Search results</h2>
                <div className="row list is-justify-content-items-flex-start">
                  {searchResult.map((obj: any) => {
                    return ( 
                        <GameCard key="" data={obj}/> )
                        })}
                    </div>
                      
                    <h2 className='text-light mb-5 pb-md-5 pt-md-5'>
                      <small>See more</small>
                    </h2>
                    </div>
                : ""}

                {/* gameslist */}
                <div className={`${rawgData ? "" : "d-none"}`} >
                    <div className='mb-2'>
                        <h2 className='pb-2 text-white'>{rawgData?.count} Games</h2>
                        <ul className='list-unstyled d-flex flex-wrap'>
                          <li className="bg-light text-white cursor-pointer ps-3 pe-3 m-2 ms-0 rounded p-2">#All</li>
                          <li className="bg-light text-white cursor-pointer ps-3 pe-3 m-2 rounded p-2">#Recent</li>
                          <li className="bg-light text-white cursor-pointer ps-3 pe-3 m-2 rounded p-2">#Upcoming</li>
                          <li className="bg-light text-white cursor-pointer ps-3 pe-3 m-2 rounded p-2">#Top100</li>
                        </ul>
                    </div>
                      {/* {JSON.stringify(rawgData)} */}
                  <h3 className=' d-flex flex-column text-white pt-md-5'>Highest rated games</h3>
                        
                  <div className={`row gameList list is-justify-content-items-flex-start ${seeMoreState ? "open" : ""}`} data-masonry='{"percentPosition": true}'>
                    {rawgData?.results.sort((a:Game, b:Game) => {return b.ratings_count - a.ratings_count && b.rating - a.rating}).map((obj: Game) => {
                      return ( 
                        <GameCard key="" data={obj}/> )
                    })}
                  </div>
                  
                  <h3 className='text-white pt-md-5 d-flex justify-content-between'>
                    <small className={`cursor-pointer ${!seeMoreState ||  rawgData?.previous === null ? "d-none" : ""}`} onClick={(e) => {setPageNumber(pageNumber -1)}}>Prev page</small>
                    <small className={`cursor-pointer ${!seeMoreState ||  rawgData?.next === null? "d-none" : ""}`} onClick={(e) => {setPageNumber(pageNumber +1)}}>Next page</small>
                  </h3>
                
                <h2 className='text-light mb-5 pb-md-5 pt-md-2 d-flex justify-content-between'>
                  <small className={`cursor-pointer ${seeMoreState ? "d-none" : ""}`} onClick={(e) => {setSeeMoreState(true)}}>See more</small>
                  <small className={`cursor-pointer ${!seeMoreState ? "d-none" : ""}`} onClick={(e) => {setSeeMoreState(false)}}>See less</small>
                </h2>
              </div>
                    
              <div className={`${rawgData ? "d-none" : ""} d-flex justify-content-center align-items-center p-4`}>
                    <HashLoader color="#2127c8"/>
                </div>
            </div>
        </MainContainer>

    </div>
  )
}

// export const getStaticProps: GetStaticProps = async (context) =>{

// const [RawgDataRes] = await Promise.all([
//     // rawgData
//     fetch(`https://api.rawg.io/api/games?key=${process.env.NEXT_PUBLIC_RAWG_API_KEY}&ordering=-metacritic`),
// ]);


// const [rawgData] = await Promise.all([
//   RawgDataRes.json()
// ]);
// return { props: { rawgData: rawgData.results } };
// }

export default Home