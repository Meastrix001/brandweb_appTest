import type { GetStaticProps, NextPage, } from 'next'
import Head from 'next/head'
import { useEffect, useState } from 'react'
import { json } from 'stream/consumers'
import GameCard from './components/GameCard'
import MainContainer from './components/MainContainer'
import { Game } from '../types'

const Home: NextPage = ({searchDataRes, RawgData}: any) => {
  // const [searchResult, setSearchResult] = useState()
  const [searchResult, setSearchResult] = useState<any[]>([])
  const [dropdownToggle, setDropdownToggle] = useState<boolean>(false)
  const [sidebarToggle, setSidebarToggle] = useState<boolean>(false)
  const [largeResultsToggle, setLargeResultsToggle] = useState<boolean>(false)
  
  useEffect(() => {
    setSearchResult(searchDataRes)
  }, [searchDataRes])
 
  return (
    <div>
      <Head>
        <title>brandWeb Test</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      
        <MainContainer> 
            <div>
              {/* searchResult large */}
              {searchResult ? 
                <div className={`${searchResult.length === 0 ? "d-none" : ""}`}>
                <h2 className=' d-flex flex-column text-white mb-5 pt-md-5'>Search results</h2>
                <div className="row list is-justify-content-items-flex-start">
                  {searchResult.map((obj: any) => {
                    return ( 
                        <GameCard key="" data={obj}/> )
                        })}
                    </div>
                      
                    <h2 className='text-light mb-5 pb-md-5 pt-md-5'>
                      <small>See more</small>
                    </h2>
                    </div>
                : ""}
            
                {/* gameslist */}
                <div className="">
                <h2 className=' d-flex flex-column text-white mb-5 pt-md-5'>Top games<small className='text-light mt-3'>By rating and metascore</small></h2>
                        
                <div className="row list is-justify-content-items-flex-start">
                {RawgData.sort((a:Game, b:Game) => {return b.ratings_count - a.ratings_count && b.rating - a.rating}).map((obj: any) => {
                  return ( 
                    <GameCard key="" data={obj}/> )
                })}
              </div>
                
              <h2 className='text-light mb-5 pb-md-5 pt-md-5'>
                <small>See more</small>
              </h2>
                
              </div>
            </div>
        </MainContainer>

    </div>
  )
}

export const getStaticProps: GetStaticProps = async (context) =>{

  const [RawgDataRes] = await Promise.all([
    // RawgData
    fetch(`https://api.rawg.io/api/games?key=${process.env.NEXT_PUBLIC_RAWG_API_KEY}&ordering=-metacritic`),
]);


const [RawgData] = await Promise.all([
  RawgDataRes.json()
]);
return { props: { RawgData: RawgData.results } };
}

export default Home